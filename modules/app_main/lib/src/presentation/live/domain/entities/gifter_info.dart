import 'package:app_core/app_core.dart';

import 'package:freezed_annotation/freezed_annotation.dart';

import '../../data/model/response/festival.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'gifter_info.freezed.dart';

// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'gifter_info.g.dart';

@freezed
class GiversInfo with _$GiversInfo {
  const factory GiversInfo({User? giver, int? diamondCount, Festival? festivalUser}) = _GiversInfo;

  factory GiversInfo.fromJson(Map<String, Object?> json) => _$GiversInfoFromJson(json);
}

extension GiversInfoExt on GiversInfo {
  String get coinSrt {
    if (diamondCount == null) {
      return '';
    }
    if (diamondCount == 0) {
      return '';
    }
    if (diamondCount! >= 1000000) {
      return '${(diamondCount! / 1000000).toStringAsFixed(1)}M';
    }
    if (diamondCount! >= 1000) {
      return '${(diamondCount! / 1000).toStringAsFixed(1)}K';
    }
    return diamondCount.toString();
  }
}
